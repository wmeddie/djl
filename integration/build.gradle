plugins {
    id 'application'
    id 'jacoco'
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    api "commons-cli:commons-cli:${commons_cli_version}"
    api "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_slf4j_version}"
    api project(":basicdataset")
    api project(":model-zoo")
    api project(":mxnet:mxnet-engine")
    api project(":mxnet:mxnet-model-zoo")
    api("org.testng:testng:${testng_version}") {
        exclude group: "junit", module: "junit"
    }

    runtimeOnly "ai.djl.mxnet:${getMXNetNativeLib()}"
}

task copyDependencies(type: Copy) {
    into "build/dependencies"
    from configurations.runtime
}

application {
    mainClassName = System.getProperty("main", "ai.djl.integration.IntegrationTest")
}

run {
    systemProperties System.getProperties()
    systemProperties.remove("user.dir");
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    group = "Reporting"
    getSourceDirectories().from(files())
    getClassDirectories().from(files())

    javaProjects().findAll { p ->
        ![":mxnet:jnarator", ":tensorflow:engine", ":examples"].contains(p.getPath())
    }.each { p ->
        additionalSourceDirs files((Set<File>) p.sourceSets.main.allJava.srcDirs)
        additionalClassDirs((FileCollection) p.sourceSets.main.output)
    }

    reports {
        xml.enabled true
        csv.enabled false
    }

    // Work-around to allow us to build list of executionData files in doFirst
    onlyIf = {
        true
    }
}


